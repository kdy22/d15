{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "detection-api",
	"displayName":"S2: Video Stream Analysis (Object Detection)",
    "annotations": {     
      "description": "Application template for detection api.Creating accurate machine learning models capable of localizing and identifying multiple objects in a single image remains a core challenge in computer vision. The TensorFlow Object Detection API is an open source framework built on top of TensorFlow that makes it easy to construct, train and deploy object detection models. At Google we have certainly found this codebase to be useful for our computer vision needs, and we hope that you will as well.",
      "tags": "quickstart,python"
    }
  },
  "objects": [
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "5000-tcp",
            "protocol": "TCP",
            "port": 5000,
            "targetPort": 5000
          }
        ],
        "selector": {
          "deploymentconfig": "${APPLICATION_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
        "triggers": [
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChange": {}
          }
        ],
        "source": {
          "type": "Git",
          "git": {
            "uri": "${GIT_URI}",
            "ref": "${GIT_REF}"
          }
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "python:3.6",
			  "namespace":"openshift"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APPLICATION_NAME}:latest"
          }
        },
        "resources": {}
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {}
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APPLICATION_NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "deploymentconfig": "${APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "deploymentconfig": "${APPLICATION_NAME}"
            },
			"annotations" : {
				"service-profile": "video-stream"    
			}
          },
          "spec": {
            "containers": [
              {
                "name": "${APPLICATION_NAME}",
                "image": "${APPLICATION_NAME}",
                "ports": [
                  {
                    "containerPort": 5000,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                },
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "Always"
              }
            ],
			"schedulerName": "crane-video-stream",
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {}
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "APPLICATION_NAME",
      "description": "Application Name",
      "value": "detection-api",
      "displayName": "Application Name",
      "required": true
    },
	{
      "name": "SERVICE_PROFILE",
      "description": "Service Profile",
      "value": "video-stream",
      "displayName": "Service Profile",
      "required": true
    },
    {
      "name": "GIT_URI",
      "description": "The URL of the repository with your application source code.",
      "displayName": "Git URI",
      "required": true,
      "value": "https://github.com/gitjjh/detectiontest.git"
    },
    {
      "name": "GIT_REF",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
      "displayName": "Git Branch",
      "value": "master"
    },
    {
      "name": "APPLICATION_HOSTNAME",
      "description": "The exposed hostname that will route to the app service, if left blank a value will be defaulted.",
      "displayName": "Application hostname"
    },
    {
      "name": "PYTHON_UPSTREAM_IMAGE",
      "description": "Base OpenShift PYTHON36 Image",
      "value": "docker.io/centos/python-36-centos7:latest",
      "displayName": "Upstream S2I Image"
    },
    {
      "name": "PYTHON_UPSTREAM_IMAGE_TAG",
      "description": "Base OpenShift PYTHON36 Image Tag",
      "value": "3.6",
      "displayName": "Upstream S2I Image Tag"
    }
  ]
}
